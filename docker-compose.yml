version: "3.9"
services:
  db:
    container_name: db
    image: postgres:16.1-alpine3.19
    ports:
      - "5432:5432"
    environment:
      - TZ=GMT+6
      - PGTZ=GMT+6
      - POSTGRES_DB=steam_price_tracker
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-root}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:7.2.4-alpine3.19
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    container_name: backend
    build: ./backend
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/steam_price_tracker
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER:-postgres}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD:-root}
      - SPRING_DATA_REDIS_HOST=redis
      - CAPTCHA_SECRET_KEY=${CAPTCHA_SECRET_KEY}
    restart: unless-stopped

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      args:
        - VITE_CAPTCHA_SITE_KEY=${VITE_CAPTCHA_SITE_KEY}
    ports:
      - "3000:3000"
    restart: unless-stopped

  nginx:
    image: nginx:1.25.3-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped

volumes:
  db-data:
  redis:
